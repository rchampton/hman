<!doctype html>
<html>
    <head>
        <title>Connect</title>
        <link href="/client/sprites.css" rel="stylesheet" type="text/css">
        <style type="text/css">
            .letter{
                background-color: #efefef;
                border: solid 1px black;
                padding-right: 15px;
                margin: 15px;
            }
            #spritekbd{
                text-align:center;
            }
            div[class^="letter"] {
                border:solid 1px #efefef;
                cursor:pointer;
                margin:6px;
            }
        </style>
        <script src="/js/lodash.js"></script>
        <script src="/js/machina.min.js"></script>
        <script src="/js/HmanclientFsm.js"></script>
        <script src="/socket.io/socket.io.js"></script>
        <script>
            var clientFsm
                , socket
                , ui={};

            function initui(){
                ui.closeAllDivs=function(){
                    var nodes=document.body.childNodes;//getElementsByTagName('div');
                    for(var i=0, max=nodes.length; i<max; i++)
                        if(nodes[i].nodeName=='DIV')
                            nodes[i].style.display='none';
// TODO no need to iterate over all the #text nodes
                };

                ui.refresh=function(){
                    this.closeAllDivs();
                    document.getElementById('ui-'+clientFsm.state).style.display='block';
                    var inputs=document.getElementById('ui-'+clientFsm.state).getElementsByTagName('input');
                    if(inputs.length)inputs[0].focus();

                    var gamestate=clientFsm.getGamestate();

                    if(gamestate===undefined)return;

                    var currDiv=document.getElementById('ui-'+clientFsm.state);
                    var who=currDiv.getElementsByClassName('who')[0]
                        , gallow=currDiv.getElementsByClassName('gallow')[0]
                        , prompt=currDiv.getElementsByClassName('prompt')[0]
                        , mask=currDiv.getElementsByClassName('mask')[0]
                        , lettersDiv=currDiv.getElementsByClassName('letters')[0]
                        , playkbd=document.getElementById('playkbd');
                    if(gamestate.winner&&gamestate.winner===-1){
                        switch(clientFsm.isMyTurn()){
                            case true:
                                who.innerHTML='Your turn '+gamestate.playerName;
                                gallow.innerHTML=gamestate.gallow;
                                prompt.innerHTML='Choose a letter';
                                mask.innerHTML=gamestate.mask;
                                lettersDiv.innerHTML='';
                                var a, span, nbsp, br;

                                var LETTERS=['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'];

                                for(var i=0, max=LETTERS.length; i<max; i++){
                                    if(gamestate.letters.indexOf(LETTERS[i])===-1){
                                        // Letter not available
                                        span=document.createElement('span');
                                        span.className='letter';
                                        span.innerHTML=LETTERS[i]+'&nbsp;';
                                        lettersDiv.appendChild(span);
                                    }else{
                                        // Letter still available
                                        nbsp=document.createElement('span');
                                        nbsp.innerHTML='&nbsp;';
                                        a=document.createElement('a');
                                        a.className='letter';
                                        a.href='javascript:play(\''+LETTERS[i]+'\')';
                                        a.innerHTML=LETTERS[i];
                                        lettersDiv.appendChild(a);
                                        lettersDiv.appendChild(nbsp);
                                    }

                                    if((i+1)%5==0){
                                        br=document.createElement('br');
                                        lettersDiv.appendChild(br);
                                        br=document.createElement('br');
                                        lettersDiv.appendChild(br);
                                    }

                                }

                                /* Do new letters */
                                var divPlaykbd=document.getElementById('playkbd');
                                for(var i=divPlaykbd.children.length; i>0; i--)
                                    divPlaykbd.children[i-1].remove();

                                this.drawKeyboard('playkbd', 'playinput', gamestate.letters, this.handlePlayClick);
console.log("document.getElementById('playinput') " + document.getElementById('playinput'));
                                document.getElementById('playinput').addEventListener('input', function(){alert('yo');});

                                break;
                            case false:
                                who.innerHTML=gamestate.playerName+'\'s turn';
                                prompt.innerHTML=gamestate.playerName+'\'s turn';
                                /*gallow.innerHTML=gamestate.gallow;
                                prompt.innerHTML=gamestate.playerName+'\'s turn';
                                mask.innerHTML=gamestate.mask;
                                lettersDiv.innerHTML=gamestate.letters.join(' ');*/
                                break;
                            default:
                                break;
                        }
                    }
                }.bind(ui);

                ui.appendLetter=function(targetElemId){
                    var letterSelected=event.target.getAttribute('letter');
                    var targetElem=document.getElementById(targetElemId);
                    targetElem.value+=letterSelected;
                };
                
                ui.drawKeyboard=function(elemId, clickToControlElemId, availableLetters, fn){
                    var NUMLETTERSPERLINE=6;
                    var letters='abcdefghijklmnopqrstuvwxyz'.split('');
                    var divLetters=document.getElementById(elemId);
                    var newLetter, br;

                    for(var i=0, z=letters.length; i<z; i++){
                        newLetter=document.createElement('div');
                        newLetter.className='letter-'+letters[i];
                        newLetter.style.display='inline-block';
                        newLetter.setAttribute('letter', letters[i]);

                        if(availableLetters==undefined || availableLetters.indexOf(letters[i])>-1){
                            // TODO don't like the way this is done, hacky with the whole fn thing
                            if(fn !== undefined){
                                newLetter.onclick=fn;
                            }else{
                                newLetter.setAttribute('onclick', 'javascript:ui.appendLetter("'+clickToControlElemId+'");');
                            }
                        }

                        if(availableLetters && availableLetters.indexOf(letters[i])===-1)
                            newLetter.style.opacity=0.5;

                        divLetters.appendChild(newLetter);
                        
                        if((i+1)%NUMLETTERSPERLINE===0){
                            br=document.createElement('br');
                            divLetters.appendChild(br);
                        }
                    }
                };
                
                ui.handlePlayClick=function(){
                    play(event.target.getAttribute('letter'));
                };
                
            }
            
            document.addEventListener('DOMContentLoaded', function(e){
                console.log('Ready');

                clientFsm=new HmanclientFsm();

                clientFsm.on('*', function(eventName, data){
                    switch(eventName){
                        case 'transition':
                            if(clientFsm.DEBUGTRACE)console.debug('Transition from ' + data.fromState + ' to ' + data.toState);
                            break;
                        case 'handling':
                            break;
                        case 'handled':
                            ui.refresh();
                            break;
                        default:
                            if(clientFsm.DEBUGTRACE)console.debug('Fsm event ' + eventName + ' fired');
                            break;
                    }
                });

                initui();
                ui.drawKeyboard('spritekbd', 'pname');
                ui.drawKeyboard('spritekbd2', 'word');

                clientFsm.handle('start');
            });

            function connect(){
                clientFsm.connect();
            }

            function login(){
                var pname=document.getElementById('pname').value;

                if(!(/^ *$/g.test(pname)))
                    clientFsm.login(pname);
                else
                    console.log('Please provide a name');
            }

            function send(){
                var word=document.getElementById('word').value;

                if(!(/^ *$/g.test(word))){
                    clientFsm.send(word);
                }else{
                    console.log('Please provide a word');
                }
            }

            function play(letter){
                clientFsm.play(letter);
            }
        </script>
    </head>
    <body>
        <div id="ui-connecting">
            <h3>Connect</h3>
            <button onclick="clientFsm.connect()">Connect</button>
        </div>

        <div id="ui-matching">
            <h3>Login</h3>
            <input id="pname" />
            <hr>
            <div class="spritekbd" id="spritekbd"></div>
            <button onclick="login()">Login</button>
        </div>

        <div id="ui-setup">
            <h3>Choose your word</h3>
            <input id="word"/>
            <hr>
            <div class="spritekbd" id="spritekbd2"></div>
            <button onclick="send()">Go!</button>
        </div>

        <div id="ui-syncing">
            <h3>Waiting to start...</h3>
        </div>

        <div id="ui-waiting">
            <h3 class="who">Opponent's turn...</h3>
            <div class="prompt"></div>
            <div class="gallow"></div>
            <div class="mask"></div>
            <div class="letters"></div>
        </div>

        <div id="ui-playing">
            <h3 class="who">Your turn...</h3>
            <div class="gallow"></div>
            <div class="mask"></div>
            <div class="prompt"></div>
            <div class="letters"></div>
            <input id="playinput">
            <div id="playkbd" class="spritekbd"></div>
        </div>

        <div id="ui-won">
            <h3>You won!  :)</h3>
            <a href="#" onclick="document.location.reload();">Play again</a>
        </div>

        <div id="ui-lost">
            <h3>You lost.  :(</h3>
            <a href="#" onclick="document.location.reload();">Play again</a>
        </div>

        <div id="ui-done">
            <h3>Done</h3>
            <a href="window.refresh();">Play again</a>
        </div>
    </body>
</html>