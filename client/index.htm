<!doctype html>
<html>
    <head>
        <title>Connect</title>
        <script src="/js/lodash.js"></script>
        <script src="/js/machina.min.js"></script>
        <script src="/js/HmanclientFsm.js"></script>
        <script src="/socket.io/socket.io.js"></script>
        <script>
            var clientFsm
                , socket
                , ui={};

            function initui(){
                ui.closeAllDivs=function(){
                    var nodes=document.body.childNodes;//getElementsByTagName('div');
                    for(var i=0, max=nodes.length; i<max; i++)
                        if(nodes[i].nodeName=='DIV')
                            nodes[i].style.display='none';
                        else 
                            console.log('nodes['+i+'].nodeName ' + nodes[i].nodeName);
                };

                ui.refresh=function(){
                    this.closeAllDivs();
                    document.getElementById('ui-'+clientFsm.state).style.display='block';
                    var inputs=document.getElementById('ui-'+clientFsm.state).getElementsByTagName('input');
                    if(inputs.length)inputs[0].focus();

                    var gamestate=clientFsm.getGamestate();
                    var currDiv=document.getElementById('ui-'+clientFsm.state);
                    var gallow=currDiv.getElementsByClassName('gallow')[0]
                        , prompt=currDiv.getElementsByClassName('prompt')[0]
                        , letters=currDiv.getElementsByClassName('letters')[0];
                    switch(clientFsm.isMyTurn()){
                        case true:
                            gallow.innerHTML=gamestate.gallowIndex;
                            prompt.innerHTML='Choose a letter';
                            letters.innerHTML=gamestate.letters.join(' ');
                            break;
                        case false:
                            gallow.innerHTML=gamestate.gallowIndex;
                            prompt.innerHTML='Opponent\'s turn';
                            letters.innerHTML=gamestate.letters.join(' ');
                            break;
                        default:
                            break;
                    }
                }.bind(ui);
            }
            
            document.addEventListener('DOMContentLoaded', function(e){
                console.log('Ready');

                clientFsm=new HmanclientFsm();

                clientFsm.on('*', function(eventName, data){
//                    console.log('event [' + eventName + '] with data [' + data + ']');
                    switch(eventName){
                        case 'transition':
                            if(clientFsm.DEBUGTRACE)console.debug('Transition from ' + data.fromState + ' to ' + data.toState);
                            break;
                        case 'handling':
                            break;
                        case 'handled':
                            ui.refresh();
                            break;
                        default:
                            if(clientFsm.DEBUGTRACE)console.debug('Fsm event ' + eventName + ' fired');
                            break;
                    }
                });

                initui();
                clientFsm.handle('start');
            });

            function connect(){
                clientFsm.connect();
            }

            function login(){
                var pname=document.getElementById('pname').value;

                if(!(/^ *$/g.test(pname)))
                    clientFsm.login(pname);
                else
                    console.log('Please provide a name');
            }

            function send(){
                var word=document.getElementById('word').value;

                if(!(/^ *$/g.test(word))){
                    clientFsm.send(word);
                }else{
                    console.log('Please provide a word');
                }
            }

            function play(){
                var letter='a';
                clientFsm.play('a');
            }
        </script>
    </head>
    <body>
        <div id="ui-connecting">
            <h3>Connect</h3>
            <button onclick="clientFsm.connect()">Connect</button>
        </div>

        <div id="ui-matching">
            <h3>Login</h3>
            <input id="pname" />
            <button onclick="login()">Login</button>
        </div>

        <div id="ui-setup">
            <h3>Choose your word</h3>
            <input id="word"/>
            <button onclick="send()">Go!</button>
        </div>

        <div id="ui-syncing">
            <h3>Waiting to start...</h3>
        </div>

        <div id="ui-waiting">
            <h3>Opponent's turn...</h3>
            <div class="gallow"></div>
            <div class="prompt"></div>
            <div class="letters"></div>
        </div>

        <div id="ui-playing">
            <h3>Your turn...</h3>
            <button onclick="play()">Play</button>
            <div class="gallow"></div>
            <div class="prompt"></div>
            <div class="letters"></div>
        </div>

        <div id="ui-won">
            <h3>You won!  :)</h3>
        </div>

        <div id="ui-lost">
            <h3>You lost.  :(</h3>
        </div>

        <div id="ui-done">
            <h3>Done</h3>
            <a href="window.refresh();">Play again</a>
        </div>
    </body>
</html>